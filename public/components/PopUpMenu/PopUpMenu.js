let popUpMenuTemplate = null;

async function getPopUpMenuTemplate() {
    if (popUpMenuTemplate) return popUpMenuTemplate;

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º partials
    const userMenuRes = await fetch('/components/UserMenu/UserMenu.hbs');
    const userMenuSource = await userMenuRes.text();
    Handlebars.registerPartial('user-menu', Handlebars.compile(userMenuSource));

    const menuItemRes = await fetch('/components/MenuItem/MenuItem.hbs');
    const menuItemSource = await menuItemRes.text();
    Handlebars.registerPartial('menu-item', Handlebars.compile(menuItemSource));

    const res = await fetch('/components/PopUpMenu/PopUpMenu.hbs');
    const source = await res.text();
    popUpMenuTemplate = Handlebars.compile(source);
    return popUpMenuTemplate;
}

export class PopUpMenu {
    constructor({ user, menuItems }) {
        this.user = user;
        this.menuItems = menuItems || [
            { key: 'bookmarks', icon: '/img/icons/bookmark.svg', text: '–ß–µ—Ä–Ω–æ–≤–∏–∫–∏' },
            { key: 'saved', icon: '/img/icons/folder.svg', text: '–ó–∞–∫–ª–∞–¥–∫–∏' },
            { key: 'settings', icon: '/img/icons/settings.svg', text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' },
            { key: 'subscription', icon: '/img/icons/diamond.svg', text: '–ü–æ–¥–ø–∏—Å–∫–∞' },
            { key: 'logout', icon: '/img/icons/logout.svg', text: '–í—ã–π—Ç–∏' }
        ];
    }

    async render() {
        const template = await getPopUpMenuTemplate();
        const html = template({
            user: this.user,
            menuItems: this.menuItems
        });

        const div = document.createElement('div');
        div.innerHTML = html.trim();
        const popUpMenu = div.firstElementChild; // <div class="popUp-menu">

        // === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ –ø—É–Ω–∫—Ç–∞–º –º–µ–Ω—é ===
        const menuItems = popUpMenu.querySelectorAll('.menu-item');
        menuItems.forEach(item => {
            item.addEventListener('click', (e) => {
                e.preventDefault();
                const key = item.dataset.key;

                console.log(`[PopUpMenu] –ö–ª–∏–∫ –ø–æ –ø—É–Ω–∫—Ç—É: ${key}`);

                // üî• –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é ‚Äî —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ DOM
                if (popUpMenu.parentNode) {
                    popUpMenu.remove();
                }

                // üö™ –î–ª—è "–í—ã—Ö–æ–¥" ‚Äî –¥–µ–ª–∞–µ–º logout (–∑–∞–≥–ª—É—à–∫–∞)
                if (key === 'logout') {
                    handleLogout();
                }

                // üí° –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã ‚Äî –º–æ–∂–Ω–æ –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é
                // –Ω–∞–ø—Ä–∏–º–µ—Ä: window.location.href = `/${key}`;
            });
        });

        // === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å–∞–º–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É (—á—Ç–æ–±—ã –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª–æ—Å—å –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω—É—Ç—Ä–∏) ===
        popUpMenu.addEventListener('click', (e) => {
            e.stopPropagation(); // –Ω–µ –¥–∞–µ–º —Å–æ–±—ã—Ç–∏—é –≤—Å–ø–ª—ã–≤–∞—Ç—å –¥–æ body
        });

        return popUpMenu;
    }
}

// üîê –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ ‚Äî –∫–∞–∫ –≤ LoginForm
function handleLogout() {
    console.log('–ü–æ–ø—ã—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞...');
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /logout
        fetch('/logout', { method: 'POST' })
            .then(res => {
                if (res.ok) {
                    console.log('–í—ã—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
                    window.location.reload(); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚Äî —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏–ª—Å—è Header
                } else {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', res.status);
                }
            })
            .catch(err => {
                console.error('–°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', err);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.');
            });
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', err);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ.');
    }
}